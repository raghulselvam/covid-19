[{"C:\\Users\\ELCOT\\covid-19\\src\\index.js":"1","C:\\Users\\ELCOT\\covid-19\\src\\App.js":"2","C:\\Users\\ELCOT\\covid-19\\src\\reportWebVitals.js":"3","C:\\Users\\ELCOT\\covid-19\\src\\InfoBox.js":"4","C:\\Users\\ELCOT\\covid-19\\src\\Map.js":"5","C:\\Users\\ELCOT\\covid-19\\src\\Table.js":"6","C:\\Users\\ELCOT\\covid-19\\src\\util.js":"7","C:\\Users\\ELCOT\\covid-19\\src\\Lines.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":3407,"mtime":1606978067686,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":637,"mtime":1606978157005,"results":"13","hashOfConfig":"10"},{"size":686,"mtime":1606712596974,"results":"14","hashOfConfig":"10"},{"size":371,"mtime":1606489127346,"results":"15","hashOfConfig":"10"},{"size":1587,"mtime":1606979236607,"results":"16","hashOfConfig":"10"},{"size":2527,"mtime":1606967442076,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"x3hm9m",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"C:\\Users\\ELCOT\\covid-19\\src\\index.js",[],["36","37"],"C:\\Users\\ELCOT\\covid-19\\src\\App.js",[],"C:\\Users\\ELCOT\\covid-19\\src\\reportWebVitals.js",[],"C:\\Users\\ELCOT\\covid-19\\src\\InfoBox.js",[],"C:\\Users\\ELCOT\\covid-19\\src\\Map.js",[],"C:\\Users\\ELCOT\\covid-19\\src\\Table.js",[],"C:\\Users\\ELCOT\\covid-19\\src\\util.js",[],"C:\\Users\\ELCOT\\covid-19\\src\\Lines.js",["38"],"import { responsiveFontSizes } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport {Line} from \"react-chartjs-2\"\r\nimport numeral from \"numeral\"\r\n//https://disease.sh/v3/covid-19/historical/all?lastdays=120\r\nconst options={\r\n    legend:{\r\n        display:false,\r\n    },\r\n    elements:{\r\n        point:{\r\n            radius:0,\r\n        }\r\n    },\r\n    maintainAspectRatio:false,\r\n    tooltips: {\r\n        mode:\"index\",\r\n        intersect:false,\r\n        callbacks: {\r\n            label: function(tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        }\r\n    },\r\n    scales:{\r\n        xAxes:[{\r\n           type:\"time\",\r\n           time:{\r\n               format:\"MM/DD//YY\",\r\n               tooltipFormat:\"ll\"\r\n           }\r\n        }],\r\n        yAxex:[\r\n            {\r\n                gridLines:{\r\n                    display:false,\r\n                },\r\n                ticks:{\r\n                    callback:function(value,index,values){\r\n                        return numeral(value).format(\"0a\");\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n    \r\n}\r\n\r\nconst buildData=(data,caseTypes=\"cases\")=>{\r\n    const chartData=[];\r\n    let lastData;\r\n    for(let date in data.cases){\r\n        if(lastData){\r\n            const newData={ \r\n                x:date,\r\n                y:data[caseTypes][date]-lastData\r\n            }\r\n            chartData.push(newData)\r\n        }\r\n        \r\n        lastData=data[caseTypes][date]\r\n    }\r\n    return chartData \r\n   \r\n}\r\n\r\nfunction Lines({caseTypes=\"cases\"}) {\r\n    \r\n    const[data,setdata]=useState({});\r\n    useEffect(()=>{\r\n        const fetchData=async()=>{ await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response=>response.json()).then(data=>{\r\n        console.log(data)\r\n       let chartData=buildData(data,caseTypes)\r\n       setdata(chartData)\r\n\r\n    })\r\n}\r\nfetchData();\r\n    },[caseTypes])\r\n    \r\n    \r\n   \r\n    return (\r\n        <div className=\"line\">\r\n            {data?.length>0 &&(\r\n              <Line\r\n              options={options}\r\n               data={{\r\n                 datasets:  [\r\n                     {\r\n                         backgroundColor:\"rgba(204,16,52,0.5)\",\r\n                         borderColor:\"#CC1034\",\r\n                         data:data\r\n                     }\r\n                 ]\r\n               }}\r\n              />\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lines\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":10,"nodeType":"45","messageId":"46","endLine":1,"endColumn":29},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'responsiveFontSizes' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]